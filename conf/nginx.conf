




#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

env UPLOAD_PATH;
env PRIVATE_HOST;
env PUBLIC_HOST;

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    client_max_body_size 10m;
    gzip  on;
    lua_package_path "/data/uploadserver/libs/?.lua;;";
    server {

    listen 80;
        set_by_lua $upload_path 'return os.getenv("UPLOAD_PATH") or "/data/uploadserver/upload"';
        set_by_lua $private_host 'return os.getenv("PRIVATE_HOST") or "http://upload.local.net"';
        set_by_lua $public_host 'return os.getenv("PUBLIC_HOST") or "http://upload.local.net"';
        location /upload {
                content_by_lua_file /data/uploadserver/uploadfile.lua;
                add_header Access-Control-Allow-Origin '$http_origin';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header Access-Control-Allow-Method "POST, PUT, OPTIONS";
                add_header  Access-Control-Allow-Headers "x-user-token,x-auth-appkey, x-auth-time, x-auth-token";
         }
        location / {
            root $upload_path/public/;
        }

        location /private {
            alias $upload_path/private/;
        }
        location /temp {
            alias $upload_path/temp/;
        }
    }
}
